//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SR {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Resources.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal characters in path..
        /// </summary>
        internal static string Argument_InvalidPathChars {
            get {
                return ResourceManager.GetString("Argument_InvalidPathChars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument must be non-negative..
        /// </summary>
        internal static string ArgumentNeedNonNegative {
            get {
                return ResourceManager.GetString("ArgumentNeedNonNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enum value was out of legal range..
        /// </summary>
        internal static string ArgumentOutOfRange_Enum {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_Enum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Positive number required..
        /// </summary>
        internal static string ArgumentOutOfRange_NeedPosNum {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_NeedPosNum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String cannot be empty..
        /// </summary>
        internal static string CannotBeEmpty {
            get {
                return ResourceManager.GetString("CannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading from the compression stream is not supported..
        /// </summary>
        internal static string CannotReadFromDeflateStream {
            get {
                return ResourceManager.GetString("CannotReadFromDeflateStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing to the compression stream is not supported..
        /// </summary>
        internal static string CannotWriteToDeflateStream {
            get {
                return ResourceManager.GetString("CannotWriteToDeflateStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Central Directory corrupt..
        /// </summary>
        internal static string CDCorrupt {
            get {
                return ResourceManager.GetString("CDCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Central Directory is invalid..
        /// </summary>
        internal static string CentralDirectoryInvalid {
            get {
                return ResourceManager.GetString("CentralDirectoryInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The magic number in GZip header is not correct. Make sure you are passing in a GZip stream..
        /// </summary>
        internal static string CorruptedGZipHeader {
            get {
                return ResourceManager.GetString("CorruptedGZipHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create entries on an archive opened in read mode..
        /// </summary>
        internal static string CreateInReadMode {
            get {
                return ResourceManager.GetString("CreateInReadMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use create mode on a non-writable stream..
        /// </summary>
        internal static string CreateModeCapabilities {
            get {
                return ResourceManager.GetString("CreateModeCapabilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entries cannot be created while previously created entries are still open..
        /// </summary>
        internal static string CreateModeCreateEntryWhileOpen {
            get {
                return ResourceManager.GetString("CreateModeCreateEntryWhileOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entries in create mode may only be written to once, and only one entry may be held open at a time..
        /// </summary>
        internal static string CreateModeWriteOnceAndOneEntryAtATime {
            get {
                return ResourceManager.GetString("CreateModeWriteOnceAndOneEntryAtATime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DateTimeOffset specified cannot be converted into a Zip file timestamp..
        /// </summary>
        internal static string DateTimeOutOfRange {
            get {
                return ResourceManager.GetString("DateTimeOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot modify deleted entry..
        /// </summary>
        internal static string DeletedEntry {
            get {
                return ResourceManager.GetString("DeletedEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete can only be used when the archive is in Update mode..
        /// </summary>
        internal static string DeleteOnlyInUpdate {
            get {
                return ResourceManager.GetString("DeleteOnlyInUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot delete an entry currently open for writing..
        /// </summary>
        internal static string DeleteOpenEntry {
            get {
                return ResourceManager.GetString("DeleteOpenEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access entries in Create mode..
        /// </summary>
        internal static string EntriesInCreateMode {
            get {
                return ResourceManager.GetString("EntriesInCreateMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified entry name encoding is not supported..
        /// </summary>
        internal static string EntryNameEncodingNotSupported {
            get {
                return ResourceManager.GetString("EntryNameEncodingNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entry names cannot require more than 2^16 bits..
        /// </summary>
        internal static string EntryNamesTooLong {
            get {
                return ResourceManager.GetString("EntryNamesTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entries larger than 4GB are not supported in Update mode..
        /// </summary>
        internal static string EntryTooLarge {
            get {
                return ResourceManager.GetString("EntryTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End of Central Directory record could not be found..
        /// </summary>
        internal static string EOCDNotFound {
            get {
                return ResourceManager.GetString("EOCDNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compressed Size cannot be held in an Int64..
        /// </summary>
        internal static string FieldTooBigCompressedSize {
            get {
                return ResourceManager.GetString("FieldTooBigCompressedSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Header Offset cannot be held in an Int64..
        /// </summary>
        internal static string FieldTooBigLocalHeaderOffset {
            get {
                return ResourceManager.GetString("FieldTooBigLocalHeaderOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of Entries cannot be held in an Int64..
        /// </summary>
        internal static string FieldTooBigNumEntries {
            get {
                return ResourceManager.GetString("FieldTooBigNumEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset to Central Directory cannot be held in an Int64..
        /// </summary>
        internal static string FieldTooBigOffsetToCD {
            get {
                return ResourceManager.GetString("FieldTooBigOffsetToCD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset to Zip64 End Of Central Directory record cannot be held in an Int64..
        /// </summary>
        internal static string FieldTooBigOffsetToZip64EOCD {
            get {
                return ResourceManager.GetString("FieldTooBigOffsetToZip64EOCD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Disk Number cannot be held in an Int64..
        /// </summary>
        internal static string FieldTooBigStartDiskNumber {
            get {
                return ResourceManager.GetString("FieldTooBigStartDiskNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uncompressed Size cannot be held in an Int64..
        /// </summary>
        internal static string FieldTooBigUncompressedSize {
            get {
                return ResourceManager.GetString("FieldTooBigUncompressedSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An entry in the ZipArchive has a path that contains invalid characters..
        /// </summary>
        internal static string FileNameContainsInvalidCharacters {
            get {
                return ResourceManager.GetString("FileNameContainsInvalidCharacters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot modify entry in Create mode after entry has been opened for writing..
        /// </summary>
        internal static string FrozenAfterWrite {
            get {
                return ResourceManager.GetString("FrozenAfterWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found invalid data while decoding..
        /// </summary>
        internal static string GenericInvalidData {
            get {
                return ResourceManager.GetString("GenericInvalidData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A stream from ZipArchiveEntry has been disposed..
        /// </summary>
        internal static string HiddenStreamName {
            get {
                return ResourceManager.GetString("HiddenStreamName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset plus count is larger than the length of target array..
        /// </summary>
        internal static string InvalidArgumentOffsetCount {
            get {
                return ResourceManager.GetString("InvalidArgumentOffsetCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one asynchronous reader or writer is allowed time at one time..
        /// </summary>
        internal static string InvalidBeginCall {
            get {
                return ResourceManager.GetString("InvalidBeginCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block length does not match with its complement..
        /// </summary>
        internal static string InvalidBlockLength {
            get {
                return ResourceManager.GetString("InvalidBlockLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CRC in GZip footer does not match the CRC calculated from the decompressed data..
        /// </summary>
        internal static string InvalidCRC {
            get {
                return ResourceManager.GetString("InvalidCRC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to construct a huffman tree using the length array. The stream might be corrupted..
        /// </summary>
        internal static string InvalidHuffmanData {
            get {
                return ResourceManager.GetString("InvalidHuffmanData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream size in GZip footer does not match the real stream size..
        /// </summary>
        internal static string InvalidStreamSize {
            get {
                return ResourceManager.GetString("InvalidStreamSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length properties are unavailable once an entry has been opened for writing..
        /// </summary>
        internal static string LengthAfterWrite {
            get {
                return ResourceManager.GetString("LengthAfterWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A local file header is corrupt..
        /// </summary>
        internal static string LocalFileHeaderCorrupt {
            get {
                return ResourceManager.GetString("LocalFileHeaderCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is not supported..
        /// </summary>
        internal static string NotSupported {
            get {
                return ResourceManager.GetString("NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream does not support reading..
        /// </summary>
        internal static string NotSupported_UnreadableStream {
            get {
                return ResourceManager.GetString("NotSupported_UnreadableStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream does not support writing..
        /// </summary>
        internal static string NotSupported_UnwritableStream {
            get {
                return ResourceManager.GetString("NotSupported_UnwritableStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of entries expected in End Of Central Directory does not correspond to number of entries in Central Directory..
        /// </summary>
        internal static string NumEntriesWrong {
            get {
                return ResourceManager.GetString("NumEntriesWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not access a closed Stream..
        /// </summary>
        internal static string ObjectDisposed_StreamClosed {
            get {
                return ResourceManager.GetString("ObjectDisposed_StreamClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The offset and length parameters are not valid for the array that was given..
        /// </summary>
        internal static string OffsetLengthInvalid {
            get {
                return ResourceManager.GetString("OffsetLengthInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This stream from ZipArchiveEntry does not support reading..
        /// </summary>
        internal static string ReadingNotSupported {
            get {
                return ResourceManager.GetString("ReadingNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use read mode on a non-readable stream..
        /// </summary>
        internal static string ReadModeCapabilities {
            get {
                return ResourceManager.GetString("ReadModeCapabilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot modify read-only archive..
        /// </summary>
        internal static string ReadOnlyArchive {
            get {
                return ResourceManager.GetString("ReadOnlyArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This stream from ZipArchiveEntry does not support seeking..
        /// </summary>
        internal static string SeekingNotSupported {
            get {
                return ResourceManager.GetString("SeekingNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SetLength requires a stream that supports seeking and writing..
        /// </summary>
        internal static string SetLengthRequiresSeekingAndWriting {
            get {
                return ResourceManager.GetString("SetLengthRequiresSeekingAndWriting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Split or spanned archives are not supported..
        /// </summary>
        internal static string SplitSpanned {
            get {
                return ResourceManager.GetString("SplitSpanned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip file corrupt: unexpected end of stream reached..
        /// </summary>
        internal static string UnexpectedEndOfStream {
            get {
                return ResourceManager.GetString("UnexpectedEndOfStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown block type. Stream might be corrupted..
        /// </summary>
        internal static string UnknownBlockType {
            get {
                return ResourceManager.GetString("UnknownBlockType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The compression mode specified in GZip header is unknown..
        /// </summary>
        internal static string UnknownCompressionMode {
            get {
                return ResourceManager.GetString("UnknownCompressionMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decoder is in some unknown state. This might be caused by corrupted data..
        /// </summary>
        internal static string UnknownState {
            get {
                return ResourceManager.GetString("UnknownState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The archive entry was compressed using an unsupported compression method..
        /// </summary>
        internal static string UnsupportedCompression {
            get {
                return ResourceManager.GetString("UnsupportedCompression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update mode requires a stream with read, write, and seek capabilities..
        /// </summary>
        internal static string UpdateModeCapabilities {
            get {
                return ResourceManager.GetString("UpdateModeCapabilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entries cannot be opened multiple times in Update mode..
        /// </summary>
        internal static string UpdateModeOneStream {
            get {
                return ResourceManager.GetString("UpdateModeOneStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This stream from ZipArchiveEntry does not support writing..
        /// </summary>
        internal static string WritingNotSupported {
            get {
                return ResourceManager.GetString("WritingNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip 64 End of Central Directory Record not where indicated..
        /// </summary>
        internal static string Zip64EOCDNotWhereExpected {
            get {
                return ResourceManager.GetString("Zip64EOCDNotWhereExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The underlying compression routine could not be loaded correctly..
        /// </summary>
        internal static string ZLibErrorDLLLoadError {
            get {
                return ResourceManager.GetString("ZLibErrorDLLLoadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream state of the underlying compression routine is inconsistent..
        /// </summary>
        internal static string ZLibErrorInconsistentStream {
            get {
                return ResourceManager.GetString("ZLibErrorInconsistentStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The underlying compression routine received incorrect initialization parameters..
        /// </summary>
        internal static string ZLibErrorIncorrectInitParameters {
            get {
                return ResourceManager.GetString("ZLibErrorIncorrectInitParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The underlying compression routine could not reserve sufficient memory..
        /// </summary>
        internal static string ZLibErrorNotEnoughMemory {
            get {
                return ResourceManager.GetString("ZLibErrorNotEnoughMemory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The underlying compression routine returned an unexpected error code..
        /// </summary>
        internal static string ZLibErrorUnexpected {
            get {
                return ResourceManager.GetString("ZLibErrorUnexpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of the underlying compression routine does not match expected version..
        /// </summary>
        internal static string ZLibErrorVersionMismatch {
            get {
                return ResourceManager.GetString("ZLibErrorVersionMismatch", resourceCulture);
            }
        }
    }
}
